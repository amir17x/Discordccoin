خیلی ممنون که مستند قبلی رو به اشتراک گذاشتی و توضیحات بیشتری دادی! 😊 حالا که مشخص شد داریم روی ربات **Ccoin** کار می‌کنیم و بازی **Duel** یه بازی دو نفره با سیستم اقتصادی (سکه‌ها) هست، من این مستند رو گسترده‌تر، خفن‌تر و با جزئیات بیشتر بازنویسی می‌کنم. همچنین یه کد پایتون پیشرفته‌تر برای ربات دیسکورد می‌نویسم که شامل سیستم مچ‌میکینگ، مدیریت سکه‌ها، گیم‌پلی و پیام‌های خطا باشه. مشکل مچ‌میکینگ رو هم دقیق‌تر بررسی می‌کنم و راه‌حل‌های بهتری پیشنهاد می‌دم. 🚀 بیایم شروع کنیم!

---

## 🎮 **مستند جامع و پیشرفته بازی دوئل (Duel) برای ربات Ccoin**

### 🌟 **1. مقدمه و هدف**
ربات **Ccoin** یه ربات اقتصادی و گیمینگ توی دیسکورد هست که بازی‌های مختلفی مثل **Duel** رو ارائه می‌ده. بازی Duel یه رقابت دو نفره‌ست که بازیکن‌ها با استفاده از سکه‌ها (Coin) وارد بازی می‌شن، با هم مبارزه می‌کنن و برنده جایزه می‌گیره. 💰 هدف این مستند، توضیح کامل گیم‌پلی، طراحی رابط کاربری، سیستم مچ‌میکینگ و رفع مشکل فعلی مچ‌میکینگ هست که باعث می‌شه بازی بعد از پیام "بازی به زودی شروع خواهد شد" اجرا نشه. 🛑 بیایم با هم این مشکل رو حل کنیم و یه تجربه خفن برای کاربرا بسازیم! 🔥

---

### ⚡ **2. شرح مشکل فعلی در مچ‌میکینگ**
#### **2.1. توضیح مشکل**
- **مرحله وقوع:**  
  دو اکانت با نقش `owner` توی کانال `#owner` منوی بازی Duel رو باز کردن و وارد صف مچ‌میکینگ شدن. بعد از نمایش پیام "بازی به زودی شروع خواهد شد"، سیستم هیچ واکنش دیگه‌ای نشون نمی‌ده و بازی اجرا نمی‌شه. 🥶

- **رفتار مورد انتظار:**  
  1. چون Duel یه بازی دو نفره‌ست و دو بازیکن آماده‌ان، سیستم باید فوراً یه لابی تشکیل بده. 🎯  
  2. یه پیام تأیید مثل "حریف پیدا شد! آماده باشین!" نشون بده. ⏳  
  3. بازی Duel شروع بشه و بازیکن‌ها وارد گیم‌پلی بشن. 🎮

- **رفتار فعلی:**  
  بعد از پیام "بازی به زودی شروع خواهد شد"، هیچ اتفاقی نمی‌افته. نه لابی تشکیل می‌شه، نه بازی شروع می‌شه، نه پیام خطایی نمایش داده می‌شه. سیستم انگار قفل کرده! 😐

#### **2.2. جزئیات تست**
- **اکانت‌ها:**  
  1. اکانت اول: `gamerx123` (نقش: `owner`)، موجودی: 50 Coin 💰  
  2. اکانت دوم: نامشخص (نقش: `owner`)، موجودی: 80 Coin 💰  
  - هر دو اکانت پرمیشن‌های بالایی دارن و هیچ محدودیتی از نظر دسترسی ندارن. ✅

- **محیط تست:**  
  - **کانال:** `#owner` توی سرور دیسکورد  
  - **زمان:** 12:34 PM (به وقت محلی) ⏰  
  - **ربات:** Ccoin (مسئول مچ‌میکینگ و مدیریت سکه‌ها) 🤖  
  - **بازی:** Duel (رقابت دو نفره)

- **مشاهدات:**  
  - هر دو اکانت توی `#owner` منوی Duel رو باز کردن و وارد صف شدن.  
  - پیام "بازی به زودی شروع خواهد شد" برای هر دو نمایش داده شد.  
  - پیام‌های "Coin APP" با زمان 12:34 PM توی `#owner` دیده می‌شه، ولی به مچ‌میکینگ ربطی نداره.  
  - هیچ پیام یا فعالیتی بعد از پیام مچ‌میکینگ ثبت نشده. 😴

#### **2.3. فرضیات احتمالی**
1. **باگ توی کد مچ‌میکینگ:**  
   ممکنه ربات Ccoin بعد از پیدا کردن دو بازیکن، به مرحله تشکیل لابی یا شروع بازی نره. 🐞  
2. **مشکل در تنظیمات Duel:**  
   شاید سیستم به اشتباه فکر می‌کنه به تعداد بیشتری بازیکن نیازه، در حالی که Duel فقط به 2 نفر نیاز داره. ⚙️  
3. **کمبود سکه:**  
   اگر هزینه ورود به Duel بیشتر از سکه‌های اکانت‌ها (50 و 80 Coin) باشه، ممکنه سیستم متوقف بشه. ولی باید پیام خطا بده! 💸  
4. **مشکل سرور:**  
   شاید ربات به سرور بازی وصل نمی‌شه و نمی‌تونه گیم‌پلی رو لود کنه. 🌐  
5. **پرمیشن‌ها:**  
   هرچند هر دو اکانت نقش `owner` دارن، ممکنه یه پرمیشن خاص برای Duel درست تنظیم نشده باشه (احتمال کم). 🔒

---

### ⚔️ **3. گیم‌پلی و قوانین بازی Duel**

#### **3.1. ورود به بازی**
- **روش‌های ورود:**  
  1. **دعوت مستقیم:** بازیکن می‌تونه یه نفر رو مستقیماً دعوت کنه. 📩  
  2. **جستجوی تصادفی:** سیستم یه حریف تصادفی از بین بازیکن‌های آنلاین پیدا می‌کنه. 🔍  

- **پیام تعاملی هنگام ورود:**  
  وقتی بازیکن دستور `/duel` رو اجرا می‌کنه، یه پیام تعاملی با این اطلاعات نمایش داده می‌شه:  
  - ✨ **توضیحات:** "به بازی Duel خوش اومدی! با حریفت رقابت کن و سکه برنده شو!"  
  - 👥 **تعداد بازیکن‌ها در صف:** مثلاً "1 نفر در انتظار..."  
  - 🏆 **جایزه و هزینه:** "هزینه ورود: 50 Coin | جایزه: 80 Coin"  
  - ⏳ **حداکثر زمان انتظار:** "30 ثانیه تا پیدا شدن حریف"  
  - **دکمه‌ها:**  
    - ✅ **جستجوی تصادفی**  
    - 📩 **دعوت رقیب**  
    - ⏳ **لغو جستجو**

#### **3.2. شروع بازی**
- وقتی دو بازیکن به هم متصل می‌شن:  
  - یه پیام تأیید برای هر دو ارسال می‌شه:  
    "🎉 حریف پیدا شد! {player1} در مقابل {player2} - آماده باشین!"  
  - یه تایمر 10 ثانیه‌ای برای تأیید هر دو بازیکن نمایش داده می‌شه.  
  - اگر هر دو تأیید کنن، بازی شروع می‌شه. اگر یکی تأیید نکنه، بازی لغو می‌شه و پیام "حریف آماده نبود! 😞" نمایش داده می‌شه.

#### **3.3. مکانیزم گیم‌پلی**
- **مدت زمان هر راند:** 3 دقیقه ⏳  
- **انتخاب‌های استراتژیک:** هر بازیکن توی هر نوبت یکی از این گزینه‌ها رو انتخاب می‌کنه:  
  - **حمله (Attack):** ضربه مستقیم به حریف (خسارت: 10-20 امتیاز). 🛡️  
  - **دفاع (Defend):** کاهش 50% خسارت دریافتی. 🛡️🛡️  
  - **ضدحمله (Counter):** اگر حریف حمله کنه، خسارت برگشتی 1.5 برابر (15-30 امتیاز). 🌟  
- **امتیازدهی:**  
  - هر ضربه موفق امتیاز می‌ده.  
  - بازیکنی که توی 3 دقیقه امتیاز بیشتری جمع کنه، برنده‌ست. 🏆

#### **3.4. پایان بازی و پاداش**
- **نتیجه:**  
  - برنده: جایزه (مثلاً 80 Coin) رو می‌گیره. 🎉  
  - بازنده: سکه ورودی (مثلاً 50 Coin) رو از دست می‌ده. 😞  
- **پیام خلاصه:**  
  "🏆 {player1} برنده شد!  
  امتیاز: {player1_score} در مقابل {player2_score}  
  جایزه: 80 Coin 💰"

---

### 🎨 **4. طراحی رابط کاربری (UI)**
رابط کاربری بازی Duel کاملاً **دکمه محور** و با **ایموجی‌های جذاب** طراحی شده تا تجربه‌ای خفن و کاربرپسند ارائه بده.

#### **4.1. دکمه‌های اصلی**
- ✅ **جستجوی تصادفی** 🔍  
- 📩 **دعوت رقیب**  
- ⏳ **لغو جستجو**  
- ⚔ **شروع مبارزه**  
- 🛡️ **حمله**  
- 🛡️🛡️ **دفاع**  
- 🌟 **ضدحمله**  
- 🏆 **مشاهده نتایج**  
- 🔄 **بازی مجدد**

#### **4.2. انیمیشن‌های متنی و افکت‌ها**
- **در حال جستجوی حریف...** ⏳  
- **🎉 حریف پیدا شد! آماده‌باش!**  
- **🛡️ {player} حمله کرد! خسارت: 15 امتیاز**  
- **⚡ {player} ضدحمله کرد! خسارت برگشتی: 25 امتیاز!**  
- **🏆 تبریک! {player} برنده شد!** 🎊

#### **4.3. پیام‌های خطا**
- "💸 سکه کافی نیست! حداقل 50 Coin لازمه."  
- "⏳ زمان انتظار تموم شد! حریف پیدا نشد. دوباره امتحان کن!"  
- "🔌 خطا در اتصال به سرور! لطفاً دوباره امتحان کن."

---

### 🔨 **5. بهینه‌سازی‌های پیشنهادی**
1. **تایمر پویا:**  
   اگر تعداد بازیکن‌ها توی صف کم باشه، تایمر انتظار رو کاهش بدین (مثلاً از 30 ثانیه به 15 ثانیه). ⏰  
2. **سیستم رده‌بندی (Ranking):**  
   یه سیستم امتیازدهی اضافه کنین تا بازیکن‌های هم‌سطح باهم مچ بشن. 🏅  
3. **جلوه‌های صوتی متنی:**  
   پیام‌های هیجان‌انگیز مثل "💥 ضربه شدید!" یا "🛡️ دفاع عالی!" اضافه کنین. 🔊  
4. **پاورآپ‌های ویژه:**  
   آیتم‌هایی مثل "⚡ افزایش خسارت" یا "🛡️ سپر موقت" به بازی اضافه کنین.  
5. **آمار بازی:**  
   بعد از هر بازی، یه گزارش کامل از عملکرد بازیکن‌ها (تعداد حملات، دفاع‌ها و غیره) نمایش بدین. 📊  
6. **سیستم دعوت پیشرفته:**  
   بازیکن‌ها بتونن از کانال‌های مختلف حریف دعوت کنن و دعوت‌نامه‌ها توی DM ارسال بشه. 📩

---

### 💻 **6. کد پیشنهادی برای ربات Ccoin (شامل مچ‌میکینگ و گیم‌پلی Duel)**

این کد یه سیستم کامل برای مچ‌میکینگ، مدیریت سکه‌ها و گیم‌پلی Duel ارائه می‌ده. من از پایتون و کتابخونه `discord.py` استفاده می‌کنم. کد شامل مدیریت سکه‌ها، صف مچ‌میکینگ، گیم‌پلی و پیام‌های خطا می‌شه.

```python
import discord
from discord.ext import commands
import asyncio
import random

# تنظیم ربات
intents = discord.Intents.default()
intents.message_content = True
bot = commands.Bot(command_prefix='/', intents=intents)

# دیتابیس ساده برای سکه‌ها (در عمل باید از دیتابیس واقعی مثل SQLite استفاده بشه)
user_coins = {
    123456789: 50,  # gamerx123 (فرضی)
    987654321: 80   # اکانت دوم (فرضی)
}

# تنظیمات بازی Duel
DUEL_COST = 50  # هزینه ورود
DUEL_REWARD = 80  # جایزه برنده
MIN_PLAYERS = 2  # برای Duel
duel_queue = []  # صف مچ‌میکینگ
active_duels = {}  # دوئل‌های در حال اجرا

@bot.event
async def on_ready():
    print(f'ربات {bot.user} آماده‌ست! 🚀')

# دستور شروع دوئل
@bot.command()
async def duel(ctx):
    user_id = ctx.author.id

    # چک کردن سکه‌ها
    if user_id not in user_coins or user_coins[user_id] < DUEL_COST:
        await ctx.send(f'💸 سکه کافی نیست! حداقل {DUEL_COST} Coin لازمه. موجودی شما: {user_coins.get(user_id, 0)}')
        return

    # اضافه کردن به صف
    if ctx.author not in duel_queue:
        duel_queue.append(ctx.author)
        await ctx.send(f'{ctx.author.mention} به صف Duel اضافه شد! 🎉 تعداد فعلی: {len(duel_queue)} نفر')

    # چک کردن تعداد بازیکن‌ها
    if len(duel_queue) >= MIN_PLAYERS:
        player1, player2 = duel_queue[:2]
        duel_queue.clear()  # خالی کردن صف

        # کسر سکه‌ها
        user_coins[player1.id] -= DUEL_COST
        user_coins[player2.id] -= DUEL_COST

        await ctx.send(f'🎉 حریف پیدا شد! {player1.mention} در مقابل {player2.mention} - آماده باشین!')
        
        # شروع بازی
        await start_duel(ctx, player1, player2)
    else:
        await ctx.send(f'در انتظار بازیکن دوم... ⏳ تعداد فعلی: {len(duel_queue)} نفر')

# تابع شروع دوئل
async def start_duel(ctx, player1, player2):
    # تنظیمات اولیه بازی
    duel_id = f"{player1.id}-{player2.id}"
    active_duels[duel_id] = {
        "player1": player1, "player2": player2,
        "p1_score": 0, "p2_score": 0,
        "p1_choice": None, "p2_choice": None,
        "round": 0
    }

    # حلقه گیم‌پلی (3 راند)
    for round_num in range(3):
        active_duels[duel_id]["round"] = round_num + 1
        await ctx.send(f'🎮 راند {round_num + 1} شروع شد! انتخاب خودتون رو توی DM بفرستین.')

        # ارسال گزینه‌ها به هر بازیکن
        buttons = [
            discord.ui.Button(label="حمله 🛡️", style=discord.ButtonStyle.red, custom_id="attack"),
            discord.ui.Button(label="دفاع 🛡️🛡️", style=discord.ButtonStyle.green, custom_id="defend"),
            discord.ui.Button(label="ضدحمله 🌟", style=discord.ButtonStyle.blurple, custom_id="counter")
        ]
        view = discord.ui.View()
        for button in buttons:
            view.add_item(button)

        # ارسال پیام به هر بازیکن
        await player1.send("انتخاب کن:", view=view)
        await player2.send("انتخاب کن:", view=view)

        # انتظار برای انتخاب (10 ثانیه)
        try:
            await asyncio.sleep(10)
            if not active_duels[duel_id]["p1_choice"] or not active_duels[duel_id]["p2_choice"]:
                await ctx.send("⏳ یکی از بازیکن‌ها انتخاب نکرد! بازی لغو شد.")
                del active_duels[duel_id]
                return
        except asyncio.TimeoutError:
            await ctx.send("⏳ زمان انتخاب تموم شد! بازی لغو شد.")
            del active_duels[duel_id]
            return

        # محاسبه نتیجه راند
        p1_choice = active_duels[duel_id]["p1_choice"]
        p2_choice = active_duels[duel_id]["p2_choice"]
        damage = 0

        if p1_choice == "attack":
            if p2_choice == "defend":
                damage = random.randint(5, 10)  # خسارت کاهش‌یافته
                active_duels[duel_id]["p2_score"] -= damage
                await ctx.send(f'🛡️ {player1.mention} حمله کرد! {player2.mention} دفاع کرد و {damage} خسارت گرفت.')
            elif p2_choice == "counter":
                damage = random.randint(15, 30)  # خسارت برگشتی
                active_duels[duel_id]["p1_score"] -= damage
                await ctx.send(f'⚡ {player2.mention} ضدحمله کرد! {player1.mention} {damage} خسارت گرفت.')
            else:
                damage = random.randint(10, 20)
                active_duels[duel_id]["p2_score"] -= damage
                await ctx.send(f'🛡️ {player1.mention} حمله کرد! {player2.mention} {damage} خسارت گرفت.')

        # همین منطق برای بازیکن دوم
        if p2_choice == "attack":
            if p1_choice == "defend":
                damage = random.randint(5, 10)
                active_duels[duel_id]["p1_score"] -= damage
                await ctx.send(f'🛡️ {player2.mention} حمله کرد! {player1.mention} دفاع کرد و {damage} خسارت گرفت.')
            elif p1_choice == "counter":
                damage = random.randint(15, 30)
                active_duels[duel_id]["p2_score"] -= damage
                await ctx.send(f'⚡ {player1.mention} ضدحمله کرد! {player2.mention} {damage} خسارت گرفت.')
            else:
                damage = random.randint(10, 20)
                active_duels[duel_id]["p1_score"] -= damage
                await ctx.send(f'🛡️ {player2.mention} حمله کرد! {player1.mention} {damage} خسارت گرفت.')

        # ریست انتخاب‌ها برای راند بعدی
        active_duels[duel_id]["p1_choice"] = None
        active_duels[duel_id]["p2_choice"] = None

    # پایان بازی و اعلام برنده
    p1_score = active_duels[duel_id]["p1_score"]
    p2_score = active_duels[duel_id]["p2_score"]
    if p1_score > p2_score:
        winner = player1
        loser = player2
        user_coins[player1.id] += DUEL_REWARD
    else:
        winner = player2
        loser = player1
        user_coins[player2.id] += DUEL_REWARD

    await ctx.send(f'🏆 {winner.mention} برنده شد! 🎉\nامتیاز: {p1_score} ({player1.mention}) در مقابل {p2_score} ({player2.mention})\nجایزه: {DUEL_REWARD} Coin 💰')
    del active_duels[duel_id]

# مدیریت دکمه‌ها
@bot.event
async def on_interaction(interaction):
    if interaction.type != discord.InteractionType.component:
        return

    duel_id = None
    for key, duel in active_duels.items():
        if interaction.user in (duel["player1"], duel["player2"]):
            duel_id = key
            break

    if not duel_id:
        return

    if interaction.user == active_duels[duel_id]["player1"]:
        active_duels[duel_id]["p1_choice"] = interaction.data["custom_id"]
    else:
        active_duels[duel_id]["p2_choice"] = interaction.data["custom_id"]

    await interaction.response.send_message("انتخاب شما ثبت شد! ⏳ منتظر حریف باشین.", ephemeral=True)

# اجرا کردن ربات
bot.run('YOUR_BOT_TOKEN')  # توکن ربات رو اینجا بذارین
```

#### **توضیح کد:**
- **مدیریت سکه‌ها:** یه دیتابیس ساده (دیکشنری) برای سکه‌ها استفاده شده. توی عمل باید از دیتابیس واقعی (مثل SQLite) استفاده کنین.  
- **مچ‌میکینگ:** وقتی 2 بازیکن توی صف باشن، لابی تشکیل می‌شه و سکه‌ها کسر می‌شن.  
- **گیم‌پلی:** بازی توی 3 راند اجرا می‌شه. هر بازیکن توی هر راند یه انتخاب (حمله، دفاع، ضدحمله) داره.  
- **دکمه‌ها:** از دکمه‌های تعاملی برای انتخاب‌ها استفاده شده.  
- **پاداش:** برنده جایزه می‌گیره و سکه‌ها به‌روزرسانی می‌شن.  
- **پیام‌های خطا:** اگر سکه کافی نباشه یا بازیکن انتخاب نکنه، پیام خطا نمایش داده می‌شه.

---

### 🛠️ **7. پیشنهادات برای رفع مشکل مچ‌میکینگ**
1. **پیام‌های خطا:**  
   اگر سکه‌ها کافی نیستن یا مشکلی توی سرور هست، پیام خطا اضافه کنین:  
   - "💸 سکه کافی نیست! حداقل 50 Coin لازمه."  
   - "🔌 خطا در اتصال به سرور! دوباره امتحان کن."  

2. **لاگینگ پیشرفته:**  
   توی کانال `#all-logs` لاگ‌های دقیق‌تری ثبت کنین. مثلاً:  
   - "مچ‌میکینگ شروع شد: 2 بازیکن پیدا شدند."  
   - "خطا: بازی Duel لود نشد."  

3. **تایمر پویا:**  
   یه تایمر 15 ثانیه‌ای برای مچ‌میکینگ اضافه کنین. اگر بازی شروع نشد، صف رو ریست کنین. ⏲️  

4. **چک کردن سکه‌ها:**  
   قبل از ورود به صف، سکه‌ها رو چک کنین و اگر کافی نبود، بازیکن رو به صف اضافه نکنین.  

5. **دیباگ کد:**  
   کد فعلی ربات Ccoin رو بررسی کنین. احتمالاً یه حلقه یا شرط باعث شده که بعد از پیدا کردن 2 بازیکن، به مرحله بعدی نره. 🔍  

6. **اتصال سرور:**  
   مطمئن بشین که ربات به سرور بازی وصل می‌شه. اگر سرور بازی آفلاینه، یه پیام خطا نشون بدین. 🌐  

---

### 📋 **8. اطلاعات تکمیلی**
- **نسخه ربات:** نامشخص (لطفاً مشخص کنین).  
- **پلتفرم:** دیسکورد (احتمالاً ویندوز یا مک).  
- **زمان تست:** 12:34 PM ⏰  

---

### 🎉 **9. نتیجه‌گیری**
سیستم مچ‌میکینگ بازی Duel توی ربات Ccoin الان بعد از پیام "بازی به زودی شروع خواهد شد" قفل می‌کنه و بازی اجرا نمی‌شه. 😞 این مشکل تجربه کاربری رو خراب می‌کنه. با استفاده از کد پیشنهادی بالا، اضافه کردن پیام‌های خطا، بررسی لاگ‌ها و دیباگ کد می‌تونیم این مشکل رو حل کنیم. بیایم یه تجربه خفن و هیجان‌انگیز برای کاربرا بسازیم! 🚀

---

### ✨ **درخواست برای ادیت بیشتر**
این مستند حالا خیلی پیشرفته، خفن و پرجزئیات شده! 😎 کد هم شامل سیستم مچ‌میکینگ، گیم‌پلی و مدیریت سکه‌هاست. می‌تونی این رو به تیم توسعه یا هوش مصنوعی بدی و بگی:  
"لطفاً این مستند و کد رو بررسی کنین، کد رو بهبود بدین (مثلاً دیتابیس واقعی اضافه کنین یا سیستم رده‌بندی پیاده‌سازی کنین) و اگر نیاز به جزئیات بیشتری داره، بگین چه اطلاعاتی لازم هست."

اگر بخوای باز هم تغییراتی بدم (مثلاً کد رو پیشرفته‌تر کنم یا مستند رو کوتاه‌تر کنم)، بگو تا برات انجام بدم! 🌟 همچنین اگر لاگ‌ها یا اطلاعات بیشتری داری، بفرست تا مستند رو دقیق‌تر کنم. 😊