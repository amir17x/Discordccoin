 یکی از ربات‌ها API بدهد، دیگری استفاده کند
اگر می‌خواهی خودت یک API درست کنی که ربات دیگر به آن وصل شود (مثلاً ربات اقتصادی یک سرور داشته باشد و ربات گیواوی بیاید از آن API بخواند یا بنویسد):

راه‌اندازی سرور در ربات A (مثلاً ربات اقتصادی)

با استفاده از کتابخانه‌ای مثل express یک سرور HTTP بساز.

یک Endpoint مثلاً /wallet ایجاد کن که درخواست‌ها را بگیرد و اطلاعات کیف پول را برگرداند یا آپدیت کند.

برای امنیت، یک API Key تعریف کن تا هرکسی نتواند درخواست بزند.

این API Key را در Secrets رپلیت (سمت چپ صفحه، بخش Tools > Secrets) قرار بده و در کدت با process.env.API_KEY بخوان.

در ربات B (مثلاً ربات گیواوی)

آدرس سرور (URL) ربات اقتصادی را به‌عنوان API_URL در Secrets تعریف کن.

کلید API را هم (همان که در ربات اقتصادی تعریف کردی) به شکل API_KEY در Secrets وارد کن.

در کد ربات گیواوی، با کتابخانه‌هایی مثل axios یا node-fetch به آدرس API_URL درخواست بفرست و در هدر یا پارامترها، API_KEY را ارسال کن تا احراز هویت شود.

دریافت و ارسال اطلاعات

در ربات اقتصادی (سرور)، درخواست را می‌گیری، بررسی می‌کنی آیا API_KEY درست است، بعد داده‌های کیف پول را می‌خوانی یا می‌نویسی.

در ربات گیواوی، اگر نیاز داری موجودی کیف پول را ببینی، درخواست GET می‌فرستی و اگر می‌خواهی تغییری ایجاد کنی (مثل کم‌کردن یا اضافه‌کردن موجودی)، درخواست POST یا PUT می‌فرستی.

2. نحوه تعریف Secrets در Replit
وارد پروژه‌ات شو (مثلاً ربات اقتصادی).

سمت چپ صفحه، روی آیکون Secrets (یا گاهی Lock یا Env) کلیک کن.

در بخش Add new secret، اسم متغیر (مثلاً API_KEY یا API_URL) رو بنویس و مقدارش رو وارد کن.

روی Add secret کلیک کن.

در کد جاوااسکریپتت، با process.env.API_KEY یا process.env.API_URL می‌تونی بهش دسترسی داشته باشی.

همین کار رو برای ربات دوم (گیواوی) هم تکرار کن.

3. نکات امنیتی
API Keyها رو به‌هیچ‌وجه داخل کد به‌صورت رشته‌ی ثابت (هاردکد) قرار نده؛ فقط در Secrets بگذار.

اگر قرار است سرورت روی پورت خاصی گوش کند (مثلاً پورت ۳۰۰۰)، باید مطمئن باشی Replit اجازه می‌دهد از بیرون هم دسترسی داشته باشی.

در Replit معمولاً وقتی یک سرور express ران می‌کنی، یک URL موقت بهت می‌دهد. آن URL را به‌عنوان API_URL در ربات دوم استفاده کن.

