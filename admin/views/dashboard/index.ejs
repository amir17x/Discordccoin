<div class="dashboard-header">
    <h1>داشبورد</h1>
    <p>خوش آمدید! آمار و اطلاعات سیستم را در اینجا مشاهده کنید.</p>
</div>

<div class="dashboard-stats">
    <div class="stat-card">
        <div class="stat-icon blue">
            <i class="fas fa-users"></i>
        </div>
        <div class="stat-content">
            <h3 class="stat-value" id="onlineUsers"><%= stats.onlineUsers %></h3>
            <p class="stat-label">کاربران آنلاین</p>
        </div>
    </div>
    
    <div class="stat-card">
        <div class="stat-icon green">
            <i class="fas fa-terminal"></i>
        </div>
        <div class="stat-content">
            <h3 class="stat-value" id="totalCommands"><%= stats.totalCommands %></h3>
            <p class="stat-label">دستورات اجرا شده</p>
        </div>
    </div>
    
    <div class="stat-card">
        <div class="stat-icon orange">
            <i class="fas fa-coins"></i>
        </div>
        <div class="stat-content">
            <h3 class="stat-value" id="coinsCirculation"><%= stats.coinsCirculation.toLocaleString() %></h3>
            <p class="stat-label">سکه در گردش</p>
        </div>
    </div>
    
    <div class="stat-card">
        <div class="stat-icon red">
            <i class="fas fa-server"></i>
        </div>
        <div class="stat-content">
            <h3 class="stat-value" id="serverLoad"><%= stats.serverLoad %>%</h3>
            <p class="stat-label">بار سرور</p>
        </div>
    </div>
</div>

<div class="dashboard-row">
    <div class="dashboard-col-7">
        <div class="chart-container">
            <div class="chart-header">
                <h3 class="chart-title">فعالیت کاربران</h3>
            </div>
            <canvas id="userActivityChart"></canvas>
        </div>
        
        <div class="chart-container">
            <div class="chart-header">
                <h3 class="chart-title">آمار اقتصادی</h3>
            </div>
            <canvas id="economyStatsChart"></canvas>
        </div>
    </div>
    
    <div class="dashboard-col-5">
        <div class="card">
            <div class="card-header">
                <h3>رویدادهای اخیر</h3>
            </div>
            <div class="card-body">
                <div class="events-list" id="recentEvents">
                    <% if (stats.recentEvents && stats.recentEvents.length > 0) { %>
                        <% stats.recentEvents.forEach(event => { %>
                            <div class="event-item">
                                <div class="event-icon <%= event.type %>">
                                    <i class="fas fa-bell"></i>
                                </div>
                                <div class="event-content">
                                    <div class="event-title"><%= event.title %></div>
                                    <div class="event-time"><%= event.time %></div>
                                </div>
                            </div>
                        <% }); %>
                    <% } else { %>
                        <div class="empty-state">
                            <p>هیچ رویدادی ثبت نشده است</p>
                        </div>
                    <% } %>
                </div>
            </div>
        </div>
        
        <div class="card">
            <div class="card-header">
                <h3>فعالیت‌های اخیر بات</h3>
            </div>
            <div class="card-body">
                <div class="activity-list">
                    <% if (stats.recentActivities && stats.recentActivities.length > 0) { %>
                        <% stats.recentActivities.forEach(activity => { %>
                            <div class="activity-item">
                                <div class="activity-user">
                                    <i class="fas fa-user-circle"></i>
                                    <%= activity.user %>
                                </div>
                                <div class="activity-content">
                                    <%= activity.action %>
                                </div>
                                <div class="activity-time">
                                    <%= activity.time %>
                                </div>
                            </div>
                        <% }); %>
                    <% } else { %>
                        <div class="empty-state">
                            <p>هیچ فعالیتی ثبت نشده است</p>
                        </div>
                    <% } %>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    // داده‌های نمودار فعالیت کاربران
    const userActivityData = {
        labels: <%- JSON.stringify(stats.userActivity.labels) %>,
        values: <%- JSON.stringify(stats.userActivity.values) %>
    };
    
    // داده‌های نمودار اقتصادی
    const economyData = {
        labels: <%- JSON.stringify(stats.economy.labels) %>,
        transactions: <%- JSON.stringify(stats.economy.transactions) %>
    };
    
    // تابع کمکی برای دریافت آیکون مناسب برای هر نوع رویداد
    function getEventIcon(type) {
        switch(type) {
            case 'info': return 'fa-info-circle';
            case 'success': return 'fa-check-circle';
            case 'warning': return 'fa-exclamation-triangle';
            case 'error': return 'fa-times-circle';
            default: return 'fa-circle';
        }
    }
</script>

<!-- اسکریپت Chart.js -->
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

<!-- اسکریپت به‌روزرسانی داده‌ها -->
<script>
    // رسم نمودارها
    document.addEventListener('DOMContentLoaded', function() {
        // رسم نمودار فعالیت کاربران
        const userActivityChart = new Chart(
            document.getElementById('userActivityChart'),
            {
                type: 'line',
                data: {
                    labels: userActivityData.labels,
                    datasets: [{
                        label: 'فعالیت کاربران',
                        data: userActivityData.values,
                        backgroundColor: 'rgba(54, 162, 235, 0.2)',
                        borderColor: 'rgba(54, 162, 235, 1)',
                        borderWidth: 2,
                        tension: 0.3
                    }]
                },
                options: {
                    responsive: true,
                    scales: {
                        y: {
                            beginAtZero: true
                        }
                    },
                    locale: 'fa-IR'
                }
            }
        );
        
        // رسم نمودار آمار اقتصادی
        const economyStatsChart = new Chart(
            document.getElementById('economyStatsChart'),
            {
                type: 'bar',
                data: {
                    labels: economyData.labels,
                    datasets: [{
                        label: 'تراکنش‌ها',
                        data: economyData.transactions,
                        backgroundColor: 'rgba(255, 159, 64, 0.2)',
                        borderColor: 'rgba(255, 159, 64, 1)',
                        borderWidth: 2
                    }]
                },
                options: {
                    responsive: true,
                    scales: {
                        y: {
                            beginAtZero: true
                        }
                    },
                    locale: 'fa-IR'
                }
            }
        );
        
        // به‌روزرسانی خودکار داده‌ها
        setInterval(fetchRealtimeStats, 30000); // هر 30 ثانیه
    });
    
    // تابع دریافت آمار لحظه‌ای
    async function fetchRealtimeStats() {
        try {
            const response = await fetch('/admin/api/realtime-stats');
            if (!response.ok) {
                throw new Error('خطا در دریافت آمار');
            }
            
            const data = await response.json();
            if (data.success) {
                updateDashboardStats(data.data);
            }
        } catch (error) {
            console.error('خطا در به‌روزرسانی آمار:', error);
        }
    }
    
    // به‌روزرسانی آمار داشبورد
    function updateDashboardStats(data) {
        // به‌روزرسانی کارت‌های آماری
        if (data.users) {
            document.getElementById('onlineUsers').textContent = data.users.online || 0;
        }
        
        if (data.server) {
            document.getElementById('serverLoad').textContent = `${data.server.cpuUsage || 0}%`;
        }
        
        // به‌روزرسانی دستورات اجرا شده
        const totalCommands = document.getElementById('totalCommands');
        if (totalCommands && data.server && data.server.totalCommands) {
            totalCommands.textContent = data.server.totalCommands;
        }
        
        // به‌روزرسانی سکه در گردش
        const coinsCirculation = document.getElementById('coinsCirculation');
        if (coinsCirculation && data.economy && data.economy.totalCoins) {
            coinsCirculation.textContent = data.economy.totalCoins.toLocaleString('fa-IR');
        }
        
        // به‌روزرسانی رویدادهای اخیر (در صورت وجود)
        if (data.recentEvents && data.recentEvents.length > 0) {
            updateRecentEvents(data.recentEvents);
        }
        
        // به‌روزرسانی فعالیت‌های اخیر (در صورت وجود)
        if (data.recentActivities && data.recentActivities.length > 0) {
            updateRecentActivities(data.recentActivities);
        }
    }
    
    // به‌روزرسانی رویدادهای اخیر
    function updateRecentEvents(events) {
        const recentEventsContainer = document.getElementById('recentEvents');
        if (!recentEventsContainer) return;
        
        // پاک کردن محتوای فعلی
        recentEventsContainer.innerHTML = '';
        
        // افزودن رویدادهای جدید
        events.forEach(event => {
            const eventItem = document.createElement('div');
            eventItem.className = 'event-item';
            
            const eventIcon = document.createElement('div');
            eventIcon.className = `event-icon ${event.type}`;
            eventIcon.innerHTML = `<i class="fas ${getEventIcon(event.type)}"></i>`;
            
            const eventContent = document.createElement('div');
            eventContent.className = 'event-content';
            eventContent.innerHTML = `
                <div class="event-title">${event.title}</div>
                <div class="event-time">${event.time || new Date().toLocaleString('fa-IR')}</div>
            `;
            
            eventItem.appendChild(eventIcon);
            eventItem.appendChild(eventContent);
            recentEventsContainer.appendChild(eventItem);
        });
    }
    
    // به‌روزرسانی فعالیت‌های اخیر
    function updateRecentActivities(activities) {
        const activitiesContainer = document.querySelector('.activity-list');
        if (!activitiesContainer) return;
        
        // پاک کردن محتوای فعلی
        activitiesContainer.innerHTML = '';
        
        // افزودن فعالیت‌های جدید
        activities.forEach(activity => {
            const activityItem = document.createElement('div');
            activityItem.className = 'activity-item';
            
            activityItem.innerHTML = `
                <div class="activity-user">
                    <i class="fas fa-user-circle"></i>
                    ${activity.user && activity.user.name || activity.user || 'کاربر ناشناس'}
                </div>
                <div class="activity-content">
                    ${activity.details || activity.action || ''}
                </div>
                <div class="activity-time">
                    ${activity.timestamp ? new Date(activity.timestamp).toLocaleString('fa-IR') : ''}
                </div>
            `;
            
            activitiesContainer.appendChild(activityItem);
        });
    }
</script>
